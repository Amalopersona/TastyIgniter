// "use client";

// import React, { useState, useRef, useEffect, useCallback } from "react";
// import { motion, AnimatePresence } from "framer-motion";
// import "tailwindcss/tailwind.css";

// // Categories and food items data
// const categories = [
//   { id: 1, name: "Fruits" },
//   { id: 2, name: "Vegetables" },
//   { id: 3, name: "Dairy" },
// ];

// const foodItems = {
//   1: [
//     { name: "Apple", image: "https://images.unsplash.com/photo-1559181567-c3190ca9959b?q=80&w=2128&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D", price: "$1.00", description: "Fresh apple" },
//     { name: "Banana", image: "https://plus.unsplash.com/premium_photo-1670006163344-6d8b83d61d79?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D", price: "$0.50", description: "Ripe banana" },
//     { name: "Orange", image: "https://images.unsplash.com/photo-1490885578174-acda8905c2c6?q=80&w=2069&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D", price: "$0.80", description: "Juicy orange" },
//   ],
//   2: [
//     { name: "Carrot", image: "https://images.unsplash.com/photo-1615485925600-97237c4fc1ec?q=80&w=2080&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D", price: "$0.30", description: "Crunchy carrot" },
//     { name: "Broccoli", image: "https://images.unsplash.com/photo-1523049673857-eb18f1d7b578?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NTh8fGZydWl0c3xlbnwwfHwwfHx8MA%3D%3D", price: "$1.20", description: "Fresh broccoli" },
//     { name: "Spinach", image: "https://images.unsplash.com/photo-1615484477778-ca3b77940c25?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NTl8fGZydWl0c3xlbnwwfHwwfHx8MA%3D%3D", price: "$0.60", description: "Green spinach" },
//   ],
//   3: [
//     { name: "Milk", image: "https://images.unsplash.com/photo-1615484476889-2830f980a5e3?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OTZ8fGZydWl0c3xlbnwwfHwwfHx8MA%3D%3D", price: "$1.50", description: "Fresh milk" },
//     { name: "Cheese", image: "https://images.unsplash.com/photo-1554795808-3231c32711cf?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTA2fHxmcnVpdHN8ZW58MHx8MHx8fDA%3D", price: "$2.00", description: "Cheddar cheese" },
//     { name: "Yogurt", image: "https://images.unsplash.com/photo-1614191697800-ff83bd175cee?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTIzfHxmcnVpdHN8ZW58MHx8MHx8fDA%3D", price: "$1.00", description: "Natural yogurt" },
//   ],
// };

// // FoodCategory component
// const FoodCategory = ({ category, cartItems, addToCart, removeFromCart }) => (
//   <div key={category.id} className="space-y-4" id={`category-${category.id}`}>
//     <h2 className="text-3xl font-bold text-gray-800">{category.name}</h2>
//     <ul className="space-y-4">
//       {foodItems[category.id].map((item, index) => (
//         <li key={index} className="bg-white rounded-lg shadow-md flex items-center space-x-4 p-4">
//           <div className="w-2/3 space-y-2">
//             <div className="flex justify-between items-center">
//               <div className="bg-green-100 text-green-800 text-xs font-semibold px-2.5 py-0.5 rounded">Bestseller</div>
//             </div>
//             <span className="text-lg text-gray-700">{item.name}</span>
//             <span className="text-base text-gray-500">{item.price}</span>
//             <p className="text-sm text-gray-600">{item.description}</p>
//           </div>
//           <div className="relative w-48 h-48">
//             <img src={item.image} alt={item.name} className="rounded-lg w-full h-full object-cover" />
//             {cartItems[item.name] ? (
//               <div className="absolute bottom-0 left-1/2 transform -translate-x-1/2 flex items-center space-x-2 mb-2 rounded-xl bg-white">
//                 <button
//                   className="bg-red-500 text-white p-2 rounded-lg shadow-md hover:bg-red-600 transition-colors duration-150"
//                   onClick={() => removeFromCart(item.name)}
//                 >
//                   -
//                 </button>
//                 <span className="text-base text-black">{cartItems[item.name]}</span>
//                 <button
//                   className="bg-blue-500 text-white p-2 rounded-lg shadow-md hover:bg-blue-600 transition-colors duration-150"
//                   onClick={() => addToCart(item.name)}
//                 >
//                   +
//                 </button>
//               </div>
//             ) : (
//               <button
//                 className="absolute bottom-0 left-1/2 transform -translate-x-1/2 bg-green-500 text-white py-2 px-6 rounded-lg shadow-md hover:bg-green-600 transition-colors duration-150 mb-2 text-sm"
//                 onClick={() => addToCart(item.name)}
//               >
//                 ADD
//               </button>
//             )}
//           </div>
//         </li>
//       ))}
//     </ul>
//   </div>
// );

// // CheckoutButton component
// const CheckoutButton = ({ cartItems }) => (
//   <AnimatePresence>
//     {Object.values(cartItems).reduce((a, b) => a + b, 0) > 0 && (
//       <motion.footer
//         key="checkout"
//         initial={{ opacity: 0, y: 50 }}
//         animate={{ opacity: 1, y: 0 }}
//         exit={{ opacity: 0, y: 50 }}
//         className="fixed bottom-0 left-0 right-0 p-4 bg-blue-600"
//       >
//         <div className="flex items-center justify-between text-white">
//           <span className="font-bold">
//             {Object.values(cartItems).reduce((a, b) => a + b, 0)} {Object.values(cartItems).reduce((a, b) => a + b, 0) === 1 ? "Item added" : "Items added"}
//           </span>
//           <button className="px-4 py-2 font-bold bg-white rounded-full text-blue-600">Checkout</button>
//         </div>
//       </motion.footer>
//     )}
//   </AnimatePresence>
// );

// // TabNavigation component
// const TabNavigation = ({ categories, cartItems, addToCart, removeFromCart }) => {
//   const refs = useRef(categories.reduce((acc, category) => {
//     acc[category.id] = React.createRef();
//     return acc;
//   }, {}));

//   const [activeCategory, setActiveCategory] = useState(categories[0].id);

//   const handleScroll = useCallback(() => {
//     const categoryPositions = categories.map((category) => {
//       const element = refs.current[category.id].current;
//       const rect = element.getBoundingClientRect();
//       return { id: category.id, top: rect.top, bottom: rect.bottom };
//     });

//     const middleOfScreen = window.innerHeight / 2;

//     for (const position of categoryPositions) {
//       if (position.top <= middleOfScreen && position.bottom > middleOfScreen) {
//         setActiveCategory(position.id);
//         break;
//       }
//     }
//   }, [categories]);

//   useEffect(() => {
//     window.addEventListener("scroll", handleScroll);
//     return () => {
//       window.removeEventListener("scroll", handleScroll);
//     };
//   }, [handleScroll]);

//   const handleTabClick = (categoryId) => {
//     setActiveCategory(categoryId);
//     refs.current[categoryId].current.scrollIntoView({ behavior: "smooth" });
//   };

//   return (
//     <div className="relative">
//       <div className="fixed top-0 left-0 right-0 z-10 bg-white shadow-md">
//         <div className="flex gap-2 p-2 overflow-x-auto scrollbar-hide">
//           {categories.map((category) => (
//             <button
//               key={category.id}
//               onClick={() => handleTabClick(category.id)}
//               className={`px-3 py-1 rounded-full text-sm font-semibold ${
//                 activeCategory === category.id ? "bg-blue-600 text-white" : "text-gray-600 hover:bg-gray-300"
//               } focus:outline-none`}
//             >
//               {category.name}
//             </button>
//           ))}
//         </div>
//       </div>
//       <div className="container mx-auto p-4 space-y-8 mt-16">
//         {categories.map((category) => (
//           <div ref={refs.current[category.id]} key={category.id}>
//             <FoodCategory category={category} cartItems={cartItems} addToCart={addToCart} removeFromCart={removeFromCart} />
//           </div>
//         ))}
//       </div>
//     </div>
//   );
// };

// // CheckoutComponent component
// const CheckoutComponent = () => {
//   const [cartItems, setCartItems] = useState({});

//   const addToCart = (item) => {
//     setCartItems((prev) => ({
//       ...prev,
//       [item]: (prev[item] || 0) + 1,
//     }));
//   };

//   const removeFromCart = (item) => {
//     setCartItems((prev) => {
//       const updatedItems = { ...prev };
//       if (updatedItems[item] > 1) {
//         updatedItems[item]--;
//       } else {
//         delete updatedItems[item];
//       }
//       return updatedItems;
//     });
//   };

//   return (
//     <div className="overflow-hidden h-full bg-gray-50">
//       <TabNavigation categories={categories} cartItems={cartItems} addToCart={addToCart} removeFromCart={removeFromCart} />
//       <CheckoutButton cartItems={cartItems} />
//     </div>
//   );
// };

// export default CheckoutComponent;




// "use client"

// import React, { useState } from 'react';
// import 'tailwindcss/tailwind.css';
// import { motion, AnimatePresence } from 'framer-motion';
// import AddToCartButton from '@/components/AddToCartButton'; // Adjust the import path as needed

// // Categories and food items data
// const categories = [
//   { id: 1, name: 'Fruits' },
//   { id: 2, name: 'Vegetables' },
//   { id: 3, name: 'Dairy' },
// ];

// const foodItems = {
//   1: [
//     { name: 'Apple', image: 'https://images.unsplash.com/photo-1559181567-c3190ca9959b?q=80&w=2128&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D', price: '$1.00', description: 'Fresh apple' },
//     { name: 'Banana', image: 'https://plus.unsplash.com/premium_photo-1670006163344-6d8b83d61d79?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D', price: '$0.50', description: 'Ripe banana' },
//     { name: 'Orange', image: 'https://images.unsplash.com/photo-1490885578174-acda8905c2c6?q=80&w=2069&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D', price: '$0.80', description: 'Juicy orange' },
//   ],
//   2: [
//     { name: 'Carrot', image: 'https://images.unsplash.com/photo-1615485925600-97237c4fc1ec?q=80&w=2080&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D', price: '$0.30', description: 'Crunchy carrot' },
//     { name: 'Broccoli', image: 'https://images.unsplash.com/photo-1523049673857-eb18f1d7b578?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D', price: '$1.20', description: 'Fresh broccoli' },
//     { name: 'Spinach', image: 'https://images.unsplash.com/photo-1615484477778-ca3b77940c25?w=600&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D', price: '$0.70', description: 'Healthy spinach' },
//   ],
//   3: [
//     { name: 'Milk', image: 'https://images.unsplash.com/photo-1598514983680-1bcd66e91fa1?q=80&w=2065&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D', price: '$1.50', description: 'Fresh milk' },
//     { name: 'Cheese', image: 'https://images.unsplash.com/photo-1588167098863-70e087c36d0b?q=80&w=2069&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D', price: '$2.00', description: 'Tasty cheese' },
//     { name: 'Yogurt', image: 'https://images.unsplash.com/photo-1630844123670-15861a2d91fd?q=80&w=2069&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D', price: '$1.00', description: 'Creamy yogurt' },
//   ],
// };

// const FoodCategory = ({ category, cartItems, addToCart, removeFromCart }) => (
//   <div key={category.id} className="space-y-4" id={`category-${category.id}`}>
//     <h2 className="text-3xl font-bold text-gray-800">{category.name}</h2>
//     <ul className="space-y-4">
//       {foodItems[category.id].map((item, index) => (
//         <li key={index} className="bg-white rounded-lg shadow-md flex flex-col md:flex-row items-center space-y-4 md:space-y-0 md:space-x-4 p-4">
//           <div className="w-full md:w-2/3 space-y-2">
//             <div className="flex justify-between items-center">
//               <div className="bg-green-100 text-green-800 text-xs font-semibold px-2.5 py-0.5 rounded">Bestseller</div>
//             </div>
//             <span className="text-lg text-gray-700">{item.name}</span>
//             <span className="text-base text-gray-500">{item.price}</span>
//             <p className="text-sm text-gray-600">{item.description}</p>
//           </div>
//           <div className="relative w-full md:w-48 h-48">
//             <img src={item.image} alt={item.name} className="rounded-lg w-full h-full object-cover" />
//             <div className="absolute bottom-0 left-1/2 transform -translate-x-1/2 mb-2">
//               <AddToCartButton
//                 itemName={item.name}
//                 initialQuantity={cartItems[item.name] || 0}
//                 addToCart={addToCart}
//                 removeFromCart={removeFromCart}
//               />
//             </div>
//           </div>
//         </li>
//       ))}
//     </ul>
//   </div>
// );

// const CheckoutComponent = () => {
//   const [cartItems, setCartItems] = useState({});

//   const addToCart = (itemName) => {
//     setCartItems((prevCartItems) => ({
//       ...prevCartItems,
//       [itemName]: (prevCartItems[itemName] || 0) + 1,
//     }));
//   };

//   const removeFromCart = (itemName) => {
//     setCartItems((prevCartItems) => {
//       const updatedCartItems = { ...prevCartItems };
//       if (updatedCartItems[itemName] > 1) {
//         updatedCartItems[itemName] -= 1;
//       } else {
//         delete updatedCartItems[itemName];
//       }
//       return updatedCartItems;
//     });
//   };

//   return (
//     <div className="space-y-8 p-4 md:p-8 bg-gray-50">
//       {categories.map((category) => (
//         <FoodCategory
//           key={category.id}
//           category={category}
//           cartItems={cartItems}
//           addToCart={addToCart}
//           removeFromCart={removeFromCart}
//         />
//       ))}
//     </div>
//   );
// };

// export default CheckoutComponent;

